"use strict";import{Cycle,Break}from"./Period.js";import{Utilities}from"./Utilities.js";class Timeline{constructor(){this.index=0,this.timeline=[]}get current(){return this.timeline[this.index]}get isLast(){return this.index===this.timeline.length-1}build(t){const{totalPeriods:e,cycleTime:i,breakTime:n}={...t};let s=[e];for(let t=0;t<e;t+=1)s[t]=t%2==0?new Cycle(t,i):new Break(t,n);this.timeline=[...s]}updateTime(t,e,i){"initial"===t.status&&(t.duration=t.isCycle?e:i,t.remaining=t.duration)}updateTarget(t,e,i){if(t.id===this.index)t.target=t.remaining+i;else{const i=e.target+1e3;t.target=t.duration+i}}updateEnabled(t,e,i){t.id===this.index?t.enabled=!0:e.enabled?t.autoStart(i):t.enabled=!1}update(t,e,i){const{cycleTime:n,breakTime:s,autoStart:a}={...i},r=[...this.timeline];for(let i=this.index;i<r.length;i+=1){const l=r[i],d=r[i-1];t.time&&this.updateTime(l,n,s),t.targets&&this.updateTarget(l,d,e),t.autoStart&&this.updateEnabled(l,d,a)}this.timeline=[...r]}shorten(t){const{totalPeriods:e}={...t},i=this.timeline.slice(0,e);this.index>i.length-1&&(this.index=i.length-1),this.timeline=[...i]}lengthen(t){const{totalPeriods:e,cycleTime:i,breakTime:n,autoStart:s}={...t},a=this.timeline.slice();for(let t=a.length;t<e;t+=1)a[t]=t%2==0?new Cycle(t,i):new Break(t,n),this.updateTarget(a[t],a[t-1],Date.now()),this.updateEnabled(a[t],a[t-1],s);this.timeline=[...a],"complete"===this.current.status&&(this.current.isCycle?(this.index+=1,this.current.end(),this.index+=1):this.index+=1)}log(){let t=[];this.timeline.forEach((e=>{const i={id:e.id,duration:Utilities.parseMs(e.duration),remaining:Utilities.parseMs(e.remaining),status:e.status,enabled:e.enabled,target:new Date(e.target).toTimeString()};t.push(i)})),console.log(t)}}export{Timeline};