@font-face {
  font-family: robotoMono;
  src: url(../fonts/RobotoMono-Regular.ttf);
}

@font-face {
  font-family: robotoMono;
  src: url(../fonts/RobotoMono-Bold.ttf);
  font-weight: bold;
}

body,
html {
  min-width: 110px;
  font-family: robotoMono, monospace;
}

.popup-container {
  --margin-elements: 14px;

  padding: 5px;
}

/* Main UI */
.top {
  width: 100%;
  height: 8px;
  margin-bottom: var(--margin-elements);
}

#options {
  max-width: 13px;
  padding: 0 3.5px;
  float: right;
  cursor: pointer;
}

.time-container {
  margin-bottom: var(--margin-elements);
  text-align: center;
}

#time {
  min-height: 25px;
  font-size: 20px;
}

.break {
  color: gray;
  animation: runningCycle 4s infinite;
}

#break-text {
  color: gray;
  /* margin-bottom: var(--margin-elements); */
}

.hidden {
  display: none;
}

.control {
  width: 100%;
  border-bottom: 2px dotted gray;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

.control img {
  max-width: 13px;
  padding: 4px;
  border-radius: 3px;
  cursor: pointer;
}

.control > * {
  margin-bottom: calc(var(--margin-elements) + 2px);
}

#start {
  background-color: black;
}

#pause,
#reset-cycle,
#reset-all {
  background-color: gray;
}

.cycles {
  min-height: 14px;
  margin-top: var(--margin-elements);
  /* grid related: */
  display: grid;
  grid-template-columns: auto auto auto auto;
  grid-auto-flow: row;
  grid-auto-rows: 14px;
  gap: 14px;
  justify-content: space-evenly;
}

.dot {
  width: 14px;
  height: 14px;
  border: 0.75px solid black;
  border-radius: 50%;
  display: inline-block;
  /* grid related: */
  justify-self: center;
}

.complete {
  background-color: black;
}

.pending {
  opacity: 0.4;
}

.running {
  animation: runningCycle 2s infinite;
  background-color: black;
}

@keyframes runningCycle {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 1;
  }
}

/* Options UI */
h1 {
  /* margin-bottom: var(--margin-elements); */
}

.options-ui {
  width: 170px;
  font-size: 12px;
}

.options-ui h1 {
  font-size: 14px;
  font-weight: bold;
}

button {
  width: max-content;
  height: fit-content;
  display: inline-block;
  font-family: inherit;
  cursor: pointer;
  border-radius: 5px;
  border: 0;
  color: white;
  background-color: black;
  padding: 2.5px 8px;
  vertical-align: middle;
}

button span {
  vertical-align: middle;
}

label {
  padding: 4px 0;
}

input[type="number"] {
  font-family: robotoMono;
  width: 75%;
  padding: 4px;
  border: 0;
  border-bottom: 1px solid rgb(209, 209, 209);
  background-color: #f2f2f2;
}

p {
  color: gray;
  margin-bottom: var(--margin-elements);
}

p span {
  font-weight: bold;
}

.option {
  display: grid;
  grid-template-columns: 1fr 0.35fr;
  margin-bottom: var(--margin-elements);
}

#back {
  max-width: 13px;
  float: right;
  cursor: pointer;
}

#status {
  float: right;
}

/* Checkmark (from w3schoools) */
/* Customize the label (the container) */
.container {
  display: block;
  position: relative;
  margin-top: 5px;
  /* padding-left: 35px;
  margin-bottom: 12px; */
  cursor: pointer;
  /* font-size: 22px; */
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 14px;
  width: 15px;
  background-color: #f2f2f2;
  border-bottom: 1px solid rgb(209, 209, 209);
}

/* On mouse-over, add a grey background color */
.container:hover input ~ .checkmark {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container input:checked ~ .checkmark {
  background-color: black;
  border-bottom: 1px solid black;
  border-radius: 2px;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
  left: 4px;
  top: 1px;
  width: 3px;
  height: 8px;
  border: solid white;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}
